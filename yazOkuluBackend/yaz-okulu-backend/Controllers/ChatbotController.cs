using Microsoft.AspNetCore.Mvc;
using yaz_okulu_backend.Services;
using yaz_okulu_backend.DTOs;
using System.Linq;

namespace yaz_okulu_backend.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class ChatbotController : ControllerBase
    {
        private readonly OpenAiService _openAiService;
        private readonly CourseService _courseService;

        public ChatbotController(OpenAiService openAiService, CourseService courseService)
        {
            _openAiService = openAiService;
            _courseService = courseService;
        }

        // ğŸŸ£ 1. Genel sohbet mesajÄ±
        [HttpPost]
        public async Task<IActionResult> GetAnswer([FromBody] ChatRequestDto request)
        {
            var response = await _openAiService.GetChatbotResponse(request.Message);
            return Ok(new { response });
        }

        // ğŸŸ£ 2. Tek ders analizi
        [HttpPost("evaluate-course")]
        public async Task<IActionResult> EvaluateCourse([FromBody] CourseEvaluationRequest request)
        {
            var courses = await _courseService.GetCoursesByDepartmentAndSemester(request.DepartmentId, request.Semester);
            var courseList = string.Join("\n", courses.Select(c => $"{c.CourseCode} - {c.CourseName}"));

            var prompt = $"""
KullanÄ±cÄ± {request.UniversityId} Ã¼niversitesinde {request.FacultyId} fakÃ¼ltesi, {request.DepartmentId} bÃ¶lÃ¼mÃ¼nde {request.Semester}. dÃ¶nemde.
KullanÄ±cÄ±nÄ±n incelediÄŸi ders: {request.CourseName}

AÅŸaÄŸÄ±daki ders listesine gÃ¶re bu dersin eÅŸleÅŸip eÅŸleÅŸmediÄŸini analiz et. YanlÄ±ÅŸlÄ±kla gÃ¶zden kaÃ§mÄ±ÅŸsa Ã¶ner:
{courseList}
""";

            var response = await _openAiService.GetChatbotResponse(prompt);
            return Ok(new { response });
        }

        // ğŸŸ£ 3. Final review iÃ§in tÃ¼m eÅŸleÅŸmeleri analiz et
        [HttpPost("final-review")]
        public async Task<IActionResult> FinalReview([FromBody] FinalReviewRequest dto)
        {
            var courses = await _courseService.GetCoursesByDepartmentAndSemester(dto.DepartmentId, dto.Semester);
            var courseList = string.Join("\n", courses.Select(c => $"{c.CourseCode} - {c.CourseName}"));
            var unmatchedList = string.Join("\n", dto.UnmatchedCourses);

            var prompt = $"""
KullanÄ±cÄ± {dto.University} - {dto.Department} bÃ¶lÃ¼mÃ¼nde {dto.Semester}. dÃ¶neme kadar olan dersleri okudu. 
AÅŸaÄŸÄ±daki dersler, sistem tarafÄ±ndan uyumsuz olarak iÅŸaretlendi:

{unmatchedList}

Ancak bu bÃ¶lÃ¼mÃ¼n tÃ¼m dersleri ÅŸunlardÄ±r:
{courseList}

LÃ¼tfen sistemin neden bu dersleri uyumsuz bulduÄŸunu analiz et. GÃ¶zden kaÃ§mÄ±ÅŸ eÅŸleÅŸebilecek dersler varsa Ã¶ner.
""";

            var response = await _openAiService.GetChatbotResponse(prompt);
            return Ok(new { response });
        }

        // ğŸŸ£ DTO iÃ§ iÃ§e
        public class ChatRequestDto
        {
            public string Message { get; set; }
        }
    }
}
